services:
  postgres:
    image: postgres
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_PASSWORD=test
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - common
  discover-server:
    image: innova-discover-server
    build: ./discover-server
    ports:
      - "9000:9000"
    networks:
      - common
  order-service:
    image: innova-order-service2
    build: ./order-service
    ports:
      - "8085:8085"
    depends_on: # container'ın başlaması != springin başlaması
      - config-server
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=docker
      - CONFIGURL=http://config-server:8001
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8001/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
  config-server:
    image: innova-config-server2
    build: ./config-server
    ports:
      -  "8001:8001"
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:7.4.1
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 168
volumes:
  db-data:
    name: db-data

networks:
  common:
    driver: bridge
